var searchIndex = JSON.parse('{\
"cansat_core":{"doc":"Platform agnostic library for cansat.","t":"CFFAFAFDMMLLLLLLMMMLMLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Measurements","calculate_altitude","calculate_altitude_with_temperature","measurements","pitch","quantity","roll","Measurements","acceleration","altitude","borrow","borrow_mut","default","format","from","into","nmea","orientation","pressure","serialize","temperature","try_from","try_into","type_id","Angle","Distance","Pressure","Temperature","add","add","add","add","as_celsius","as_degrees","as_hectos","as_kelvins","as_kilos","as_meters","as_pascals","as_radians","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","div","div","div","div","div","div","eq","eq","eq","eq","from","from","from","from","from_celsius","from_degrees","from_hectos","from_kelvins","from_kilos","from_meters","from_pascals","from_radians","into","into","into","into","mul","mul","mul","mul","partial_cmp","partial_cmp","partial_cmp","partial_cmp","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["cansat_core","","","","","","","cansat_core::measurements","","","","","","","","","","","","","","","","","cansat_core::quantity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Aircraft pitch rotation.","","Aircraft roll rotation.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,1,3,2,5,3,5,1,3,2,2,1,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5,1,2,5,1,1,3,2,2,5,1,3,2,5,1,3,2,5,3,5,1,3,2,2,1,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5,1,3,2,5],"f":[0,[1,2],[[3,1],2],0,[[4,4,4],5],0,[[4,4],5],0,0,0,[[]],[[]],[[],6],[[6,7]],[[]],[[]],0,0,0,[6,8],0,[[],8],[[],8],[[],9],0,0,0,0,[[1,1],1],[[3,3],3],[[2,2],2],[[5,5],5],[3,4],[5,4],[1,4],[3,4],[2,4],[2,4],[1,4],[5,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[2,2],[5,5],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],5],[[1,1]],[1,1],[3,3],[[2,2]],[2,2],[5,5],[[1,1],10],[[3,3],10],[[2,2],10],[[5,5],10],[[]],[[]],[[]],[[]],[4,3],[4,5],[4,1],[4,3],[4,2],[4,2],[4,1],[4,5],[[]],[[]],[[]],[[]],[1,1],[3,3],[2,2],[5,5],[[1,1],[[12,[11]]]],[[3,3],[[12,[11]]]],[[2,2],[[12,[11]]]],[[5,5],[[12,[11]]]],[[1,1],1],[[3,3],3],[[2,2],2],[[5,5],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9]],"p":[[3,"Pressure"],[3,"Distance"],[3,"Temperature"],[15,"f32"],[3,"Angle"],[3,"Measurements"],[3,"Formatter"],[4,"Result"],[3,"TypeId"],[15,"bool"],[4,"Ordering"],[4,"Option"]]},\
"cansat_gps":{"doc":"Gps device driver using embedded-hal traits.","t":"EDNRNLLLLLLLLLLLLLLLLLLLLLL","n":["Error","Gps","Overflow","STANDARD_MAX_NMEA_LEN","Serial","borrow","borrow","borrow_mut","borrow_mut","fmt","format","from","from","from","from","into","into","last_nmea","new","read_serial","send","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["cansat_gps","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Gps driver.","","Maximum length of a standard NMEA message including $ and […","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads last received NMEA message.","","Reads a single character from serial in a blocking mode …","","","","","","",""],"i":[0,0,2,0,2,7,2,7,2,2,2,7,2,2,2,7,2,7,7,7,7,7,2,7,2,7,2],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]],3],4],[[2,5]],[[]],[[],2],[[]],[6],[[]],[[]],[7,[[10,[[9,[8]]]]]],[[],7],[7,[[11,[2]]]],[7,[[11,[2]]]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12]],"p":[[8,"Debug"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Formatter"],[15,"never"],[3,"Gps"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"cansat_lora":{"doc":"","t":"NNNENNDNNNNNEDENNNLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLFLLLLLLLLLLLLLLLLL","n":["BadCommand","BadErrorCode","Data","Error","Error","Incomplete","Lora","NoDelimiter","NoPrefix","NoTerminator","Overflow","Parse","ParseError","Response","ResponseContent","Serial","UnclosedErrorParen","Unknown","append","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","content","eq","eq","eq","eq","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from_error_kind","header","into","into","into","into","into","into_serial","new","parse_response","receive","send","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["cansat_lora","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[2,2,8,0,8,2,0,2,2,2,4,4,0,0,0,4,2,2,2,13,4,7,8,2,13,4,7,8,2,4,2,7,4,7,8,2,4,7,8,2,4,2,13,4,4,7,8,2,2,7,13,4,7,8,2,13,13,0,13,13,13,4,7,8,2,13,4,7,8,2,13,4,7,8,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[4,[3]]]],[2,2],0,[[[4,[5]],4],6],[[7,7],6],[[8,8],6],[[2,2],6],[[[4,[9]],10],11],[[7,10],11],[[8,10],11],[[2,10],11],[[[4,[9]],12]],[[2,12]],[[]],[2,4],[[]],[[]],[[]],[[]],[1,2],0,[[]],[[]],[[]],[[]],[[]],[13],[[],13],[[],[[14,[7,2]]]],[13,[[14,[15,4]]]],[13,[[14,[4]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],16],[[],16],[[],16],[[],16],[[],16]],"p":[[4,"ErrorKind"],[4,"ParseError"],[8,"Clone"],[4,"Error"],[8,"PartialEq"],[15,"bool"],[3,"Response"],[4,"ResponseContent"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Formatter"],[3,"Lora"],[4,"Result"],[15,"usize"],[3,"TypeId"]]},\
"cansat_stm32f4":{"doc":"Binary crate targeting stm32f4 family microcontrollers.","t":"GGGGDGGGGGGDGGAMMAMMAAAMRRRHFDGRRDFFCDDDDFFFDDDDDDDDDDDFFFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMMLLLLLLLLLLLLLLLLLLLMMMAMMAFAFLLLLLLLLLLLLLLLLLMMMMMMMMALLLLLLLLLLLLLLLLMMAMMMAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCDACMCCCCCCCDMCDDMMMMMMCDCMACFCDADCMMCCCCCCNENNHHHLLLLLLLLLLRDLLMLMLLLLLLMLGGGDRRRRRRRRRRDGHHHHHHHHHHGDGGDGGGGGGRRGGGGDHMLLLLLLLLLLFFFFFFFFFFMMMLLLLLLMMMFFFFFFFLLLLLMMMMMMLMMMMMMLLLLLLLLLLLLLLLRRRRRRHHHHHHFFFFFFFFFFFF","n":["Bme280","Bme280Error","Delay","Gps","I2c1Devices","Led","Lis3dh","Lis3dhError","Lora","LoraError","Monotonic","SdLogger","SdmmcController","SdmmcError","app","bme280","controller","error","file","lis3dh","sd_logger","startup","tasks","volume","CEILING","CEILING","CHECK","DEFMT_LOG_STATEMENT","EXTI0","Local","MicrosecMono","PRIORITY","PRIORITY","Shared","TIM2","USART1","_","__rtic_internal_Monotonics","__rtic_internal_blinkLocalResources","__rtic_internal_blink_Context","__rtic_internal_blink_MicrosecMono_SpawnHandle","__rtic_internal_blink_MicrosecMono_spawn_after","__rtic_internal_blink_MicrosecMono_spawn_at","__rtic_internal_blink_spawn","__rtic_internal_gps_irqSharedResources","__rtic_internal_gps_irq_Context","__rtic_internal_idleLocalResources","__rtic_internal_idleSharedResources","__rtic_internal_idle_Context","__rtic_internal_initLocalResources","__rtic_internal_init_Context","__rtic_internal_send_measLocalResources","__rtic_internal_send_measSharedResources","__rtic_internal_send_meas_Context","__rtic_internal_send_meas_MicrosecMono_SpawnHandle","__rtic_internal_send_meas_MicrosecMono_spawn_after","__rtic_internal_send_meas_MicrosecMono_spawn_at","__rtic_internal_send_meas_spawn","blink","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","check","core","cs","csv_record","csv_record","csv_record","delay","delay","device","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gps","gps","gps","gps_irq","i2c1_devices","i2c1_devices","idle","idle","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","led","led","local","local","local","local","lora","lora","monotonics","new","new","new","new","new","new","new","new","new","new","new","new","reschedule_after","reschedule_after","reschedule_at","reschedule_at","sd_logger","sd_logger","send_meas","shared","shared","shared","shared_resources","statik","tracker","tracker","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Context","LocalResources","MicrosecMono","SpawnHandle","led","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","SharedResources","gps","Context","LocalResources","SharedResources","csv_record","delay","gps","i2c1_devices","sd_logger","tracker","Context","LocalResources","Monotonics","statik","MicrosecMono","now","now","Context","LocalResources","MicrosecMono","SharedResources","SpawnHandle","csv_record","lora","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","CriticalDevice","Error","Lora","Response","S","S","S","borrow","borrow_mut","fmt","format","from","from","into","try_from","try_into","type_id","FILENAME","SdLogger","borrow","borrow_mut","controller","drop","file","from","into","new","try_from","try_into","type_id","volume","write","BlockSpi2","Bme280","Bme280Error","Board","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","CanSat","Cs2","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","Delay","DummyClock","Gps","GpsError","I2c1Devices","I2c1Proxy","Led","Lis3dh","Lis3dhError","Lora","LoraError","MAX_OPEN_DIRS","MAX_OPEN_FILES","Monotonic","SdmmcController","SdmmcError","Spi2Device","Statik","VAR","bme280","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check","check","check","check","check","check","check","check","cs2","delay","delay","from","from","from","from","from","get_timestamp","gps","i2c1","i2c1_devices","init_bme280","init_board","init_drivers","init_gps","init_lis3dh","init_lora","init_sd_logger","into","into","into","into","into","led","led","lis3dh","lora","monotonic","monotonic","new","sd_logger","serial1","serial6","spi2","spi2_device","tracker","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","CHECK","CHECK","CHECK","CHECK","CHECK","CHECK","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","DEFMT_LOG_STATEMENT","blink","check","check","check","check","check","check","gps_irq","idle","read_measurements","send_lora_package","send_meas"],"q":["cansat_stm32f4","","","","","","","","","","","","","","","","","","","","","","","","cansat_stm32f4::appcansat_stm32f4::app::blink","","","","","","","","cansat_stm32f4::app::blink::MicrosecMono","","","cansat_stm32f4::app::gps_irq","","","cansat_stm32f4::app::idle","","","","","","","","","cansat_stm32f4::app::init","","","","cansat_stm32f4::app::monotonics","","cansat_stm32f4::app::monotonics::MicrosecMono","cansat_stm32f4::app::send_meas","","","","","","","","","","cansat_stm32f4::app::send_meas::MicrosecMono","","","cansat_stm32f4::error","","","","","","","","","","","","","","","","","cansat_stm32f4::sd_logger","","","","","","","","","","","","","","","cansat_stm32f4::startup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cansat_stm32f4::tasks","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","The RTIC application module","","","","","","","","","","Priority ceiling","Priority ceiling","","","Interrupt handler to dispatch tasks at priority 1","","User code from within the module","The priority of this interrupt handler","","","","","","Monotonics used by the system","Local resources <code>blink</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Shared resources <code>gps_irq</code> has access to","Execution context","Local resources <code>idle</code> has access to","Shared resources <code>idle</code> has access to","Execution context","Local resources <code>init</code> has access to","Execution context","Local resources <code>send_meas</code> has access to","Shared resources <code>send_meas</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core (Cortex-M) peripherals","Critical section token for init","","","","","","Device peripherals","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Hardware task","","","Idle loop","","Initialization function","User code end","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","","","Holds static methods for each monotonic.","","","","","","","","","","","","","","","","","","","Software task","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Local resources <code>blink</code> has access to","","","","","","","","","","","Shared resources <code>gps_irq</code> has access to","","","Local resources <code>idle</code> has access to","Shared resources <code>idle</code> has access to","","","","","","","","Local resources <code>init</code> has access to","","","This module holds the static implementation for …","","Read the current time from this monotonic","","Local resources <code>send_meas</code> has access to","","Shared resources <code>send_meas</code> has access to","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Static memory needed for startup.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles led every second","","","","","","","USART3 interrupt handler that reads data into the gps …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,26,0,26,54,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,3,1,0,9,9,55,13,18,56,14,9,3,1,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,55,13,15,0,56,14,0,0,0,0,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,56,20,9,7,19,21,56,17,0,10,9,13,14,7,15,16,17,18,19,20,21,3,1,3,1,56,14,0,7,16,19,0,10,56,14,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,55,56,10,57,9,13,14,7,15,16,17,18,19,3,20,21,1,0,0,0,0,20,0,0,0,0,0,0,0,0,15,0,0,0,13,14,13,14,14,14,0,0,0,10,0,0,0,0,0,0,0,0,18,17,0,0,0,0,0,0,23,0,23,23,0,0,0,23,23,23,23,23,23,23,23,23,23,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,41,54,39,40,30,41,54,39,40,30,0,0,0,0,0,0,0,0,0,0,39,41,39,41,54,39,40,30,30,41,39,41,0,0,0,0,0,0,0,41,54,39,40,30,41,39,54,41,41,39,40,41,39,39,39,40,41,41,54,39,40,30,41,54,39,40,30,41,54,39,40,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[1]]]],[[],2],0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[3]]]],[[],[[2,[3]]]],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,2],[1,2],[[],4],0,0,0,0,0,0,0,0,[[3,5],6],[[1,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[7,8],0,[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],10],[11,9],[12,13],[[],14],[12,7],[12,15],[12,16],[[],17],[12,18],[12,19],[[],20],[12,21],[3,[[2,[3]]]],[1,[[2,[1]]]],[3,[[2,[3]]]],[1,[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[23,5],6],[[23,24]],[25,23],[[]],[[]],[[],2],[[],2],[[],22],0,0,[[]],[[]],0,[26],0,[[]],[[]],[27,[[2,[26,28]]]],[[],2],[[],2],[[],22],0,[26,[[2,[29,28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,[[]],[[]],[[]],[[]],[[]],[30,31],0,0,0,[[[34,[[33,[32]]]],35],[[2,[36,37]]]],[38,39],[[39,40],[[2,[41,23]]]],[42,[[2,[43,[45,[44]]]]]],[[[34,[[33,[32]]]]],[[2,[46,47]]]],[48,[[2,[49,23]]]],[[50,[52,[51]],40],[[2,[26,28]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],40],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,[21],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[16],[7,8],[7,53],[49,[[2,[23]]]],[19]],"p":[[3,"__rtic_internal_blink_MicrosecMono_SpawnHandle"],[4,"Result"],[3,"__rtic_internal_send_meas_MicrosecMono_SpawnHandle"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"__rtic_internal_idle_Context"],[15,"never"],[3,"__rtic_internal_init_Context"],[3,"__rtic_internal_initLocalResources"],[3,"Peripherals"],[3,"Priority"],[3,"__rtic_internal_idleSharedResources"],[3,"__rtic_internal_idleLocalResources"],[3,"__rtic_internal_gps_irqSharedResources"],[3,"__rtic_internal_gps_irq_Context"],[3,"__rtic_internal_send_measLocalResources"],[3,"__rtic_internal_send_measSharedResources"],[3,"__rtic_internal_send_meas_Context"],[3,"__rtic_internal_blinkLocalResources"],[3,"__rtic_internal_blink_Context"],[3,"TypeId"],[4,"Error"],[3,"Formatter"],[6,"LoraError"],[3,"SdLogger"],[6,"SdmmcController"],[6,"SdmmcError"],[15,"usize"],[3,"DummyClock"],[3,"Timestamp"],[6,"I2c1"],[3,"AtomicCheckMutex"],[3,"I2cProxy"],[6,"Delay"],[6,"Bme280"],[6,"Bme280Error"],[3,"Peripherals"],[3,"Board"],[3,"Statik"],[3,"CanSat"],[6,"Serial1"],[6,"Gps"],[4,"ErrorKind"],[4,"Error"],[6,"Lis3dh"],[6,"Lis3dhError"],[6,"Serial6"],[6,"Lora"],[6,"Spi2"],[3,"Output"],[6,"PB12"],[3,"Measurements"],[3,"I2c1Devices"],[3,"Shared"],[3,"Local"],[3,"__rtic_internal_Monotonics"]]},\
"cansat_test_utils":{"doc":"Test utilities.","t":"ADLLLLLLLMLLMLL","n":["mock","Serial","borrow","borrow_mut","flush","from","into","new","read","rx_data","try_from","try_into","tx_data","type_id","write"],"q":["cansat_test_utils","cansat_test_utils::mock","","","","","","","","","","","","",""],"d":["Mock types.","Mock type implementing <code>embedded_hal::serial</code> traits.","","","Does nothing","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates an instance of serial mock that will output <code>data</code> …","Reads a single byte from the serial.","","","","","","Write a single byte to the serial."],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[]],[[]],[1,2],[[]],[[]],[3,1],[[[1,[4]]],[[2,[5]]]],0,[[],6],[[],6],0,[[],7],[[1,5],2]],"p":[[3,"Serial"],[6,"Result"],[8,"IntoIterator"],[8,"ExactSizeIterator"],[15,"u8"],[4,"Result"],[3,"TypeId"]]},\
"xtask":{"doc":"Custom commands for cargo.","t":"NDENNLLLLLLLLFMLLFFLLLLLLLLLLFFFLLLLLLLLLLFMMMMMM","n":["Build","Cli","Cmd","Embed","Test","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","build","cmd","command","command_for_update","embed","format_cmd","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","main","run","test","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","workspace_members","args","args","args","package","package","package"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::Cmd","","","","",""],"d":["<code>cd</code> into each package and run <code>cargo build</code>","","","<code>cd</code> into specified or default package and run <code>cargo embed</code>","<code>cd</code> into each package and run <code>cargo test</code>","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Arguments for <code>cargo embed</code>","Arguments for <code>cargo build</code>","Arguments for <code>cargo test</code>","Name of the package","Name of the package","Name of the package"],"i":[12,0,0,12,12,9,9,12,12,9,12,9,12,0,9,9,9,0,0,9,12,9,12,9,12,9,12,9,12,0,0,0,9,12,9,12,9,12,9,12,9,12,0,18,19,20,18,19,20],"f":[0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[[3,[2]],[5,[4]]],6],0,[[],1],[[],1],[[[3,[2]],[5,[4]]],6],[7,4],[[]],[[]],[8,[[11,[9,10]]]],[8,[[11,[12,10]]]],[8,[[11,[9,10]]]],[8,[[11,[12,10]]]],[[],[[3,[13]]]],[7,14],[[]],[[]],[[],15],[[],6],[[[3,[2]],[5,[4]]],6],[[],11],[[],11],[[],11],[[],11],[[],16],[[],16],[[9,8],[[11,[10]]]],[[12,8],[[11,[10]]]],[[9,8],[[11,[10]]]],[[12,8],[[11,[10]]]],[[],[[6,[[5,[17]]]]]],0,0,0,0,0,0],"p":[[3,"Command"],[3,"OsString"],[4,"Option"],[3,"String"],[3,"Vec"],[6,"Result"],[15,"str"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Cmd"],[3,"Id"],[15,"bool"],[3,"ExitCode"],[3,"TypeId"],[3,"PathBuf"],[13,"Embed"],[13,"Build"],[13,"Test"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
